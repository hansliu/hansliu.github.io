<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Hans Blog - 技術筆記</title><link href="https://hansliu.com/" rel="alternate"></link><link href="https://hansliu.com/feeds/ji-shu-bi-ji.atom.xml" rel="self"></link><id>https://hansliu.com/</id><updated>2020-09-26T01:00:00+08:00</updated><subtitle>life, photo, code</subtitle><entry><title>2020 Renew Pelican + GitHub Pages</title><link href="https://hansliu.com/posts/2020/09/2020-renew-pelican-github-pages.html" rel="alternate"></link><published>2020-09-26T01:00:00+08:00</published><updated>2020-09-26T01:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2020-09-26:/posts/2020/09/2020-renew-pelican-github-pages.html</id><summary type="html">&lt;p&gt;從2014年開始使用 Pelican 架設部落格寫文章到現在也過了六年，Pelican 也從原本的3.3.0版本升級到現在的4.5.0，雖然套件大架構沒有改變，但有些小地方跟以前不太一樣...&lt;/p&gt;</summary><content type="html">&lt;p&gt;從2014年開始使用 Pelican 架設部落格寫文章到現在也過了六年，Pelican 也從原本的3.3.0版本升級到現在的4.5.0，雖然套件大架構沒有改變，但有些小地方跟以前不太一樣，所以特別寫篇文章記錄下來。&lt;/p&gt;
&lt;h2&gt;什麼是 Pelican？&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; 是基於 Python 所寫的一套靜態網站管理（Static Site Generator），類似的靜態網站管理還有很多，例如以 Nodejs 寫的 &lt;a href="https://hexo.io/"&gt;Hexo&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;因為網路上已經有很多比較靜態網站和動態網站的優缺點，我這邊就不特別多講，不過對於追求成本控管和搜尋引擎優化的部落格來說，我覺得使用靜態網站管理會比較符合需求，至於為什麼選 Pelican 不選 Hexo，只是因為我比較熟悉 Python。&lt;/p&gt;
&lt;h2&gt;安裝&lt;/h2&gt;
&lt;p&gt;都到了2020年了，絕大多數的 package 都&lt;strong&gt;應該&lt;/strong&gt;支援 Python 3+（讓我們一起跟 Python 2 說拜拜），我在安裝 Pelican 4.5.0 的時候搭配的是 Python 3.8，使用 Pipenv 就能輕鬆寫意的完成安裝。&lt;/p&gt;
&lt;h2&gt;文章&lt;/h2&gt;
&lt;p&gt;現在 Pelican 是支援 Markdown 的，只要記得安裝的時候同時安裝 Markdown 對應的 package 就好，安裝完後就可以直接使用 Markdown 來撰寫文章。由於 Markdown 在各個網路內容平台都已經相當普及，所以現在不論是想要匯入匯出文章，或是想要擷取、轉載部分文章內容都會比以往來的方便許多。&lt;/p&gt;
&lt;h2&gt;樣式&lt;/h2&gt;
&lt;p&gt;樣式的部分現在可以透過 &lt;code&gt;pelican-themes&lt;/code&gt; 指令來操作，你可以安裝想要的樣式，也可以移除不想要的樣式。&lt;/p&gt;
&lt;p&gt;現在我使用的樣式是我自己製作的 &lt;code&gt;Stirring&lt;/code&gt;，有興趣的人可以在 &lt;a href="https://github.com/hansliu/pelican-stirring"&gt;pelican-stirring&lt;/a&gt; 看到更完整的介紹。&lt;/p&gt;
&lt;h2&gt;套件&lt;/h2&gt;
&lt;p&gt;套件的部份現在可以透過 &lt;code&gt;pelican-plugins&lt;/code&gt; 指令來操作，然後新的套件現在是變成 namespace &lt;a href="https://github.com/pelican-plugins"&gt;pelican-plugins&lt;/a&gt;，至於舊的套件還是在一樣的位置，官方文件是說舊的套件也可以使用，但因為 signal 設定的關係，很多舊的套件都不能正常使用，我自己是把舊的套件 pelican_youtube 抽出來加上新的 signal 設定放在自己的 repo 底下。&lt;/p&gt;
&lt;p&gt;放上現在使用的 plugins：&lt;/p&gt;
&lt;div class="python highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pelican_youtube&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pelican.plugins.related_posts&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pelican.plugins.sitemap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pelican_youtube&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="技術筆記"></category><category term="Blog"></category><category term="Python"></category><category term="Pelican"></category><category term="Github Pages"></category></entry><entry><title>新加坡稅率計算機</title><link href="https://hansliu.com/posts/2020/09/singapore-tax-calculator.html" rel="alternate"></link><published>2020-09-19T01:00:00+08:00</published><updated>2020-09-19T01:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2020-09-19:/posts/2020/09/singapore-tax-calculator.html</id><summary type="html">&lt;p&gt;在要來新加坡工作之前就有聽說新加坡的所得稅率很低，但是一直不知道實際上是怎麼計算，終於在待滿一年後有機會一窺究竟。&lt;/p&gt;
&lt;p&gt;通常來說公司 HR 會在每年三月的時候通知你去年的所得，員工要在四月中旬前自行上 IRAS 完成申報，並選擇繳費的方法，一切動作都可以在網路上操作。&lt;/p&gt;
&lt;p&gt;我在 IRAS 上看到金額的時候是有點驚訝，因為要繳的稅相對於台灣來說的確是低得多。舉例來說 ...&lt;/p&gt;</summary><content type="html">&lt;p&gt;在要來新加坡工作之前就有聽說新加坡的所得稅率很低，但是一直不知道實際上是怎麼計算，終於在待滿一年後有機會一窺究竟。&lt;/p&gt;
&lt;p&gt;通常來說公司 HR 會在每年三月的時候通知你去年的所得，員工要在四月中旬前自行上 IRAS 完成申報，並選擇繳費的方法，一切動作都可以在網路上操作。&lt;/p&gt;
&lt;p&gt;我在 IRAS 上看到金額的時候是有點驚訝，因為要繳的稅相對於台灣來說的確是低得多。舉例來說，以匯率21.5來算，年收入100萬台幣約是46,600新幣（無條件進位到百位數），要繳交的所得稅稅率約為&lt;strong&gt;2%&lt;/strong&gt;（對！沒看錯就是2%），也就是約1,000新幣，換算回來還不到22,000台幣，這還是在沒有任何額外的扣除額可以申報的情況下。&lt;/p&gt;
&lt;p&gt;有感於如此誇張的低稅率，我就想研究一下新加坡所得稅的稅率計算規則，一查之下發現新加坡跟台灣一樣是採課稅級距及累進稅率，而且課稅級距分得很細，想知道賺多少錢要繳多少所得稅要自己加減乘除（可以到 IRAS 上面下載一份 Excel 幫忙算），不然就要等報稅月份進系統看。&lt;/p&gt;
&lt;p&gt;為了方便我想查就查，我就想說可以做一個計算新加坡所得稅的網站，然後我想到以前研究日本所得稅時逛過的網站 &lt;a href="https://japantaxcalculator.com/"&gt;Japan Tax Calculator&lt;/a&gt;，當時我就覺得該網站很方便，可以讓人根據收入輕易得出所得稅和淨收入，所以我就以該網站為範本，做了一個可以計算新加坡所得稅的網站 &lt;a href="https://singaporetaxcalculator.com/"&gt;Singapore Tax Calculator&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Singapore Tax Calculator 是原生的前端頁面，用到的技術有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML5&lt;/li&gt;
&lt;li&gt;Sass/Scss&lt;/li&gt;
&lt;li&gt;Bootstrap&lt;/li&gt;
&lt;li&gt;jQuery&lt;/li&gt;
&lt;li&gt;ion.rangeSlider&lt;/li&gt;
&lt;li&gt;Vue.js&lt;/li&gt;
&lt;li&gt;Vue-i18n&lt;/li&gt;
&lt;/ul&gt;</content><category term="技術筆記"></category><category term="新加坡"></category></entry><entry><title>2020部落格改版</title><link href="https://hansliu.com/posts/2020/09/2020-blog-theme-upgrade.html" rel="alternate"></link><published>2020-09-16T01:00:00+08:00</published><updated>2020-09-16T01:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2020-09-16:/posts/2020/09/2020-blog-theme-upgrade.html</id><summary type="html">&lt;p&gt;最近常常在內容網站平台 &lt;a href="https://medium.com"&gt;Medium&lt;/a&gt; 閱讀文章的關係，想要替自己的部落格做類似的畫面呈現，同時也想把自己平常在用的 pelican theme 做的更完整，然後貢獻到社群給更多人使用，因此有了這一次的改版計畫。&lt;/p&gt;
&lt;p&gt;這次改版前前後後花的時間也是約兩週多，網站設計風格參考了很多 &lt;a href="https://medium.com"&gt;Medium&lt;/a&gt; 的設計風格，希望能帶來更好的瀏覽體驗。&lt;/p&gt;
&lt;p&gt;主要更新如下 ...&lt;/p&gt;</summary><content type="html">&lt;p&gt;最近常常在內容網站平台 &lt;a href="https://medium.com"&gt;Medium&lt;/a&gt; 閱讀文章的關係，想要替自己的部落格做類似的畫面呈現，同時也想把自己平常在用的 pelican theme 做的更完整，然後貢獻到社群給更多人使用，因此有了這一次的改版計畫。&lt;/p&gt;
&lt;p&gt;這次改版前前後後花的時間也是約兩週多，網站設計風格參考了很多 &lt;a href="https://medium.com"&gt;Medium&lt;/a&gt; 的設計風格，希望能帶來更好的瀏覽體驗。&lt;/p&gt;
&lt;p&gt;主要更新如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pelican 升級到 4.5.0，依然支援自動部屬&lt;/li&gt;
&lt;li&gt;Pelican theme 支援變數，移除 hardcode&lt;/li&gt;
&lt;li&gt;更完善的 css3 設計，重新設計 media queries&lt;/li&gt;
&lt;li&gt;不同於過去移除 bootstrap 依賴，加入 bootstrap-grid 做索引文章時的畫面呈現&lt;/li&gt;
&lt;li&gt;調整 article info 和 index info 的結構，強化 RWD 的支援&lt;/li&gt;
&lt;li&gt;加入 cover 和 cover_caption 的設計，讓撰寫文章更有彈性&lt;/li&gt;
&lt;li&gt;移除 sharethis 和 facebook app 等不實用的功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最後依舊要替新舊網站的設計留個截圖，為這次改版做個記錄。&lt;/p&gt;
&lt;h3&gt;舊網站設計的截圖&lt;/h3&gt;
&lt;p&gt;&lt;img alt="image" src="https://lh3.googleusercontent.com/cAhvW7g7L_nwURLDH4JlClgNSlp4B8K8JBZXVAx5d_OJTumm2YwE-ugr8zmKLAvkDqZ6TWvAn5rFIGEyA7n2KQWYJH4Ci0OmYMlWjFBWmAeY7Z5u5dHPPqwaUfBHiMq02G-PPjThrbPmaX_0SXlo-lZlBFX99oWd2xiq-7WK6AF0-SLDghXLR_bJOb5C1SjLqJ9HTA2A3unIY9MsIyWS_XewdTAEC4zwpohyCc7prNLZqYDyO468pgrTIlruuQHbUiYmMvTT2i_HAZAN47lkbKBT-DPkPos7aMqJK3NG2BIFqm_vPXOpK6QNXKwbd7n3DJWaLqgtlUKA2Ow_sUuwzqyHf_iya6BTLQUUYlsne7RGdQ22O1udpEnF05H6xzon_aQFGo2PCVjO7kG7jNU_H8UieRge8BR8kEVr4fW2btV6pV9WHehfnn0R5EQ8h-NAqSy_8j1zlnSiDkI7s_sWwwMgfZ7zXvPlHgMlumEjiA3eZGf1Ycavd3G5pavP7xSc2NyYsxoKGH_jqsZYeEo1pX4vyeZ4PFHPwDOgV35qpK6_UuQOCXmHIXrDIqrkZQvlTTrr4MoFkUu9nssSm_cWD6Vz2Wemu5b_0e-TeXR4KbsovdhokEV2NQ6vms8vUpRtRJKVLVYv9394cC-w_xTVhnUNnWy51U2Zd40u9BJ7Tso=w1200-h663-no"&gt;&lt;/p&gt;
&lt;h3&gt;新網站設計的截圖&lt;/h3&gt;
&lt;h4&gt;首頁&lt;/h4&gt;
&lt;p&gt;&lt;img alt="image" src="https://lh3.googleusercontent.com/pw/ACtC-3dFjgSjVlkLzIMxikExzSGuwlYDKnTBX_lgTBrHdRc_yW-Y9EeLpS2iHvUHLvZO-5JhO291jGG6iW1nxMMt3VGYBzqRGFtQw6f3UMdHgCukKlcutzI5Vko7Sj0sSbNC2hK_Q2SJtjUyVPFlG_2ou6ru0w=w1669-h803-no?authuser=0"&gt;&lt;/p&gt;
&lt;h4&gt;分類&lt;/h4&gt;
&lt;p&gt;&lt;img alt="image" src="https://lh3.googleusercontent.com/pw/ACtC-3e9koHjcHj_MuGEflxyKDNEQKORKODhYbM2_0A4BxotULpDAmDX0eJmzcvKImbRTADuLSy4XuP1F3vOMG_D8VMdGwF2ILN8pL18cubaIYFu963bVlT52SgzfmJ3_K8fH9MbIvD9zlKh1GFSNbpoF-LnmQ=w1670-h808-no?authuser=0"&gt;&lt;/p&gt;
&lt;h4&gt;文章&lt;/h4&gt;
&lt;p&gt;&lt;img alt="image" src="https://lh3.googleusercontent.com/pw/ACtC-3dfYvI1My_6l2o-B90RM4TEuYiX7Z8A_7PFhHxaCdFf4FlZ1lJ-G99hIkR95re_9Z4pNdGAg0ngCKTkWuhe1x74A7CO4z21AsUcxqS8QPTcaEwPhktMptDinEmKjaETwBxrkBRTnUQTRvmZvP2d-H4ZoA=w1668-h798-no?authuser=0"&gt;&lt;/p&gt;</content><category term="技術筆記"></category><category term="Blog"></category></entry><entry><title>Setup Python environment on Mac via pyenv and pipenv</title><link href="https://hansliu.com/posts/2020/09/setup-python-environment-on-mac-via-pyenv-and-pipenv.html" rel="alternate"></link><published>2020-09-13T01:00:00+08:00</published><updated>2020-09-13T01:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2020-09-13:/posts/2020/09/setup-python-environment-on-mac-via-pyenv-and-pipenv.html</id><summary type="html">&lt;p&gt;The following section covers Python related setup for development and how to ensure that your code ...&lt;/p&gt;</summary><content type="html">&lt;p&gt;The following section covers Python related setup for development and how to ensure that your code would be deployable.&lt;/p&gt;
&lt;h3&gt;Install brew&lt;/h3&gt;
&lt;p&gt;Homebrew is package manager for Macs which makes installing lots of different software like Git, Ruby, and Node simpler. Homebrew lets you avoid possible security problems associated with using the sudo command to install software like Node. Note this is only compatible with MacOS.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You’ll see messages in the Terminal explaining what you need to do to complete the installation process. You can learn more about Homebrew at the &lt;a href="http://brew.sh/"&gt;Homebrew website&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Install pyenv&lt;/h3&gt;
&lt;p&gt;For local development &lt;strong&gt;never&lt;/strong&gt; install packages or modify your system Python installation. To be able to install new or updated Python versions, use &lt;a href="https://github.com/pyenv/pyenv"&gt;pyenv&lt;/a&gt;. Note this is only compatible with MacOS or Linux.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;
&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pyenv&lt;/span&gt;

&lt;span class="c1"&gt;# Use Homebrew&amp;#39;s directories rather than ~/.pyenv&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;export PYENV_ROOT=&amp;quot;/usr/local/var/pyenv&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;bash_profile&lt;/span&gt;

&lt;span class="c1"&gt;# Enable shims and autocompletion&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;if command -v pyenv 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;  eval &amp;quot;$(pyenv init -)&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;fi&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;bash_profile&lt;/span&gt;

&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;bash_profile&lt;/span&gt;

&lt;span class="c1"&gt;# Check pyenv has been properly installed and configured&lt;/span&gt;
&lt;span class="n"&gt;pyenv&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Python Versions&lt;/h4&gt;
&lt;p&gt;Using &lt;code&gt;pyenv&lt;/code&gt;, install the necessary version for development. For example, we use &lt;strong&gt;Python 3.8.5&lt;/strong&gt; for development. For legacy projects, use &lt;strong&gt;Python 2.7.13&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pyenv&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="n"&gt;pyenv&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;

&lt;span class="n"&gt;pyenv&lt;/span&gt; &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;Check&lt;/span&gt; &lt;span class="k"&gt;versions&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;installed&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;assigned&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;global&lt;/span&gt;
&lt;span class="n"&gt;pyenv&lt;/span&gt; &lt;span class="k"&gt;versions&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Install pipenv&lt;/h3&gt;
&lt;p&gt;To make development and deployment easier, &lt;a href="https://github.com/pypa/pipenv"&gt;pipenv&lt;/a&gt; is used to manage virtual environments and lock dependencies.&lt;/p&gt;
&lt;p&gt;The environment variable ensures that virtual environments are created within each project folder. The main reason is for convenience as &lt;code&gt;Visual Studio Code&lt;/code&gt; automatically detects and switches virtual environments if &lt;code&gt;.venv&lt;/code&gt; is found within the folder.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt;
&lt;span class="n"&gt;brew&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pipenv&lt;/span&gt;

&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;export PIPENV_VENV_IN_PROJECT=1&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;bash_profile&lt;/span&gt;

&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;bash_profile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Usage&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;cd path/to/project&lt;/span&gt;
&lt;span class="err"&gt;pipenv --python 3.8.5&lt;/span&gt;
&lt;span class="err"&gt;pipenv install &amp;lt;new_package&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do remember to check in the generated/updated &lt;code&gt;Pipfile&lt;/code&gt; and &lt;code&gt;Pipfile.lock&lt;/code&gt; to be able to have reproducible builds in production.&lt;/p&gt;</content><category term="技術筆記"></category><category term="Python"></category></entry><entry><title>AWS CloudWatch 筆記</title><link href="https://hansliu.com/posts/2018/06/aws-cloudwatch-note.html" rel="alternate"></link><published>2018-06-06T17:00:00+08:00</published><updated>2018-06-06T17:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2018-06-06:/posts/2018/06/aws-cloudwatch-note.html</id><summary type="html">&lt;p&gt;Amazon CloudWatch 是 AWS 內建的監控服務，可以用來監控 AWS 上面的資源和應用程式，記錄一下我使用的心得。&lt;/p&gt;
&lt;div class="section" id="dashboards"&gt;
&lt;h2&gt;Dashboards&lt;/h2&gt;
&lt;p&gt;如其名，可以根據 alarms 和 metrics 來建置視覺化數據 ...&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Amazon CloudWatch 是 AWS 內建的監控服務，可以用來監控 AWS 上面的資源和應用程式，記錄一下我使用的心得。&lt;/p&gt;
&lt;div class="section" id="dashboards"&gt;
&lt;h2&gt;Dashboards&lt;/h2&gt;
&lt;p&gt;如其名，可以根據 alarms 和 metrics 來建置視覺化數據，支援 AWS CloudFormation。&lt;/p&gt;
&lt;p&gt;雖然支援 AWS CloudFormation，但實際使用上的心得，還是會建議透過 AWS Management Console 來建置，而不要透過 AWS CloudFormation 來建置，因為當你一個 dashboard 擁有很多 widget 的時候，你的 data source 會變得相當的複雜，逐漸變得難以透過 AWS CloudFormation 維護。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="alarms"&gt;
&lt;h2&gt;Alarms&lt;/h2&gt;
&lt;p&gt;根據 metrics 和 threshold 設定各式各樣的監控，當警告發生變化的時候可以觸發各種不同的 actions，支援 AWS CloudFormation。&lt;/p&gt;
&lt;p&gt;設定 alarms 可以做很多事情，常見的有 AWS Auto Scaling 來管理應用程式資源的增減，也可以透過 AWS SNS 將警告轉發到不同的 collaboration tools，建議透過 AWS CloudFormation 來管理你的 alarm，並搭配 version control 做良好的追蹤記錄。&lt;/p&gt;
&lt;table border="1" class="colwidths-given basic docutils"&gt;
&lt;caption&gt;以下整理三種 alarm states&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;狀態&lt;/td&gt;
&lt;td&gt;OK (綠色)&lt;/td&gt;
&lt;td&gt;ALARM (紅色)&lt;/td&gt;
&lt;td&gt;INSUFFICIENT (橘色)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;說明&lt;/td&gt;
&lt;td&gt;正常，指標於閥值之內&lt;/td&gt;
&lt;td&gt;異常，指標於閥值之外&lt;/td&gt;
&lt;td&gt;資訊不完全，新設定或是未知資料&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="events"&gt;
&lt;h2&gt;Events&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="logs-log-groups"&gt;
&lt;h2&gt;Logs (Log Groups)&lt;/h2&gt;
&lt;p&gt;根據 AWS 各種服務所送出的 log streaming 建置 log group，然後透過 metric filter 將 log 轉成對應的 metric，支援 AWS CloudFormation。&lt;/p&gt;
&lt;p&gt;Log 不能直接設定到 dashboard 和 alarm，要先透過 metric filter 提供的 pattern syntax 來分析 log，然後將分析結果存成自定義的 metric，有了自定義的 metric 才可以開始使用 dashboard 和 alarm 的功能，建議透過 AWS CloudFormation 來管理你的 metric filter，並搭配 version control 做良好的追蹤記錄。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="metrics"&gt;
&lt;h2&gt;Metrics&lt;/h2&gt;
&lt;p&gt;Amazon CloudWatch 的核心，基本上所有的功能都是圍繞著 metric 在運轉，在 AWS 上面的資源和應用程式都可以送各式各樣的 metric 到 Amazon CloudWatch，每個 metric 會根據 dimension 來做分類（不過 log metric filter 沒有支援 dimension）。&lt;/p&gt;
&lt;p&gt;我們可以透過 AWS Management Console 搜尋 metric，然後設定對應的 dashboard 和 alarm。&lt;/p&gt;
&lt;p&gt;參考文件：&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://aws.amazon.com/cloudwatch"&gt;https://aws.amazon.com/cloudwatch&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/WhatIsCloudWatch.html"&gt;https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/WhatIsCloudWatch.html&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="技術筆記"></category><category term="AWS"></category><category term="CloudWatch"></category></entry><entry><title>Red Hat 7 安裝 Docker CE</title><link href="https://hansliu.com/posts/2018/05/docker-ce-installation-on-red-hat-7.html" rel="alternate"></link><published>2018-05-04T16:00:00+08:00</published><updated>2018-05-04T16:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2018-05-04:/posts/2018/05/docker-ce-installation-on-red-hat-7.html</id><summary type="html">&lt;p&gt;記錄如何在 Red Hat 7 上面安裝最新的 Docker CE，而不使用官方提供的 Dcoker EE。&lt;/p&gt;
&lt;p&gt;因為 Red Hat 7 官方支援的 Docker ...&lt;/p&gt;</summary><content type="html">&lt;p&gt;記錄如何在 Red Hat 7 上面安裝最新的 Docker CE，而不使用官方提供的 Dcoker EE。&lt;/p&gt;
&lt;p&gt;因為 Red Hat 7 官方支援的 Docker 是 Enterprise Edition 版本，如果想要在 Red Hat 7 上面安裝最新的 Community Edition 版本，可以參考以下的步驟。&lt;/p&gt;
&lt;p&gt;請記得用 sudo 來執行相關的安裝指令，不然會遇到權限不足問題。&lt;/p&gt;
&lt;div class="section" id="install-yum-utils-container-selinux-and-epel-release"&gt;
&lt;h2&gt;1. Install yum-utils, container-selinux and epel-release&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;yum-utils, container-selinux&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
yum install -y yum-utils container-selinux
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;epel-release&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -ivh epel-release-latest-7.noarch.rpm
&lt;/pre&gt;
&lt;p&gt;如果沒有安裝 epel-release 的話，之後安裝 docker-ce 的時候會遇到 &lt;em&gt;Requires: pigz&lt;/em&gt; 的錯誤。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="add-docker-ce-repo-to-yum-repos"&gt;
&lt;h2&gt;2. Add docker-ce.repo to yum repos&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;docker-ce.repo&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="install-docker-ce"&gt;
&lt;h2&gt;3. Install docker-ce&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;docker-ce&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
yum install -y docker-ce
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="restart-docker-service-and-enable-it"&gt;
&lt;h2&gt;4. Restart docker service and enable it&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
systemctl restart docker
systemctl enable docker
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="run-nginx-container-to-test"&gt;
&lt;h2&gt;5. Run nginx container to test&lt;/h2&gt;
&lt;p&gt;跑一個 nginx 服務來測試你的 docker 是否可以正常執行。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
docker run --name webserver -d -p 8080:80 nginx
&lt;/pre&gt;
&lt;p&gt;開啟瀏覽器輸入底下網址，將其中的 your-IP-address 換成正確的主機名稱，就可以看到 Welcome to nginx! 的結果。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://your-IP-address:8080/"&gt;http://your-IP-address:8080/&lt;/a&gt;&lt;/p&gt;
&lt;img alt="welcome to nginx" src="https://i.imgur.com/YnUCj51.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;refer. &lt;a class="reference external" href="https://getstart.blog/2018/03/24/docker-ce-installation-on-red-hat-7/"&gt;https://getstart.blog/2018/03/24/docker-ce-installation-on-red-hat-7/&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;refer. &lt;a class="reference external" href="https://docs.docker.com/install/overview/"&gt;https://docs.docker.com/install/overview/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="技術筆記"></category><category term="Red Hat"></category><category term="Dcoker"></category></entry><entry><title>MySQL 5.7 Replication 筆記</title><link href="https://hansliu.com/posts/2018/03/mysql57-replication-note.html" rel="alternate"></link><published>2018-03-26T22:00:00+08:00</published><updated>2020-09-21T16:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2018-03-26:/posts/2018/03/mysql57-replication-note.html</id><summary type="html">&lt;p&gt;記錄一下處理 MySQL 5.7 Replication 的時候遇到的問題。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;MySQL Replication Formats&lt;/li&gt;
&lt;li&gt;MySQL Transation Islolation Level&lt;/li&gt;
&lt;li&gt;MySQL Global Transaction ...&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;記錄一下處理 MySQL 5.7 Replication 的時候遇到的問題。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;MySQL Replication Formats&lt;/li&gt;
&lt;li&gt;MySQL Transation Islolation Level&lt;/li&gt;
&lt;li&gt;MySQL Global Transaction ID&lt;/li&gt;
&lt;li&gt;MySQL Ssl-version, Ssl-cipher&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="mysql-replication-formats"&gt;
&lt;h2&gt;MySQL Replication Formats&lt;/h2&gt;
&lt;p&gt;MySQL 之所以可以實現 replication 之間的複製，是因為將 master 資料庫發生的事件寫到了 binlog 中，然後在 slave 資料庫上讀取並執行這些事件。&lt;/p&gt;
&lt;p&gt;MySQL 5.7 寫入 binlog 的格式有三種：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SBR (statement binlog replication)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 master 會記錄執行的語句到 binlog 中，然後 slave 會讀取並再次執行相同的語句。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;優點&lt;/dt&gt;
&lt;dd&gt;在 SBR 模式下，減少了 binlog 檔案量，節省 I/O 以及存儲資源，提高性能。因為它不需要記錄每一行數據的變化，只需要記錄在 master 上所執行的語句的細節，以及執行語句時候的上下文的信息。&lt;/dd&gt;
&lt;dt&gt;缺點&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;在 SBR 模式下，由於它是記錄執行的語句，為了讓這些語句在 slave 端也能正確執行，它還必須記錄每條語句在執行的時候的一些相關信息，也就是上下文信息，以保證所有語句在 slave 端被執行的時候能夠得到和在 master 端執行時候相同的結果，這樣的設計無法支援 MySQL 隨著時代發展而誕生的新函數與功能。&lt;/p&gt;
&lt;p class="last"&gt;目前在 SBR 模式中就有不少已知的特定情況會造成複製出現問題，主要是修改數據的時候使用了某些特定的函數或者功能的時候會出現，比如：sleep() 函數在有些版本中就不能被正確複製，在存儲過程中使用了 last_insert_id() 函數，可能會使 slave 和 master 上得到不一致的 id 等等。由於 RBR 模式是基於每一行來記錄的變化，所以不會出現類似的問題。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;strong&gt;RBR (row binlog replication)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 master 會將每一行數據的修改形式記錄到 binlog 中，然後 slave 讀取該數據的修改形式並執行。&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;優點&lt;/dt&gt;
&lt;dd&gt;在 RBR 模式下，binlog 中不用記錄執行的 SQL 語句的上下文信息，僅僅只需要記錄那一條記錄被修改與修改的結果，所以 binlog 的內容會非常容易理解。而且不會出現某些特定情況下的存儲過程或函數，以及觸發器的調用和触發無法被正確複製的問題。&lt;/dd&gt;
&lt;dt&gt;缺點&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;在 RBR 模式下，所有的執行的語句當記錄到 binlog 檔案中的時候，都將以每行記錄的修改來記錄，這樣可能會產生大量的 binlog 內容，比如有一條更新或刪除的語句：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
UPDATE product SET owner_member_id ='b' WHERE owner_member_id ='a'
DELETE FROM log WHERE createtime &amp;lt; DATE_SUB(NOW(), INTERVAL 1 month)
&lt;/pre&gt;
&lt;p class="last"&gt;執行之後，binlog 記錄的不是這條更新或刪除語句所對應的事件，而是這條語句所更新的每一條記錄的變化情況，這樣就記錄成很多條記錄被更新的很多個事件。自然 binlog 檔案的量就會很大。尤其是當執行修改表之類的語句的時候，產生的 binlog 檔案量是驚人的。因為 MySQL 對於改變資料表結構之類的變更語句的處理方式是整個資料表的每一條記錄都需要變動，實際上就是重建了整個資料表。可以想像該資料表的每一條記錄都會被記錄到 binlog 中。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;strong&gt;MBR (mixed binlog replication)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;從 MySQL 5.1.8 之後開始提供的第三種模式, 交由 MySQL 根據語法去決定要用 statement 或是 row 來記錄 binlog。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;refer. &lt;a class="reference external" href="https://dev.mysql.com/doc/refman/5.7/en/replication-formats.html"&gt;https://dev.mysql.com/doc/refman/5.7/en/replication-formats.html&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;refer. &lt;a class="reference external" href="https://dev.mysql.com/doc/refman/5.7/en/replication-sbr-rbr.html"&gt;https://dev.mysql.com/doc/refman/5.7/en/replication-sbr-rbr.html&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;refer. &lt;a class="reference external" href="http://www.simlinux.com/2012/07/06/mysql-binlog-format.html"&gt;http://www.simlinux.com/2012/07/06/mysql-binlog-format.html&lt;/a&gt; (中文)&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mysql-transation-islolation-level"&gt;
&lt;h2&gt;MySQL Transation Islolation Level&lt;/h2&gt;
&lt;p&gt;隔離性是交易的保證之一，表示交易與交易之間不互相干擾，好像同時間就只有自己的交易存在一樣，隔離性保證的基本方式是在資料庫層面，對資料庫或相關欄位鎖定，在同一時間內只允許一個交易進行更新或讀取。&lt;/p&gt;
&lt;p&gt;但完全的鎖定資料庫在事務上並不會這麼做，因為完全的鎖定資料庫將導致嚴重的效能問題，因此實務上會根據資料讀寫更新的頻繁性，設定不同的交易隔離層級 (transaction isolation level)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;READ COMMITTED&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;至少保證：「A 交易已更新但尚未確認的資料，B 交易僅可作讀取動作」。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可避免 lost update 的問題，交易資料庫引擎採取的最低隔離層級，這個隔離層級讀取錯誤資料的機率太高，一般不會採用這種隔離層級。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;READ UNCOMMITTED&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;至少保證：「A 與 B 交易讀取的資料必須是已確認的資料」。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可避免 dirty read 以下問題。基本作法是，讀取的交易不會阻止其它的交易，一個未確認的更新交易會阻止其它所有的交易，但這影響效能較大，另一個基本作法是交易正在更新，尚未確定前都先操作暫存表格。&lt;/p&gt;
&lt;p&gt;RBR 支援，使用 RBR 的時候可以設定 READ UNCOMMITTED。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REPEATABLE READ&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;至少保證：「同一 A 交易內兩次讀取的資料必須相同」。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可避免 unrepeatable read 以下問題。基本作法是，讀取交易不會阻止其它讀取的交易，但阻止其它寫入的交易，但這影響效能較大，另一基本作法是，一個交易正在讀取，尚未確認前，另一交易要更新給予暫存表格。&lt;/p&gt;
&lt;p&gt;SBR 支援，使用 SBR 的時候只能設定 REPEATABLE READ。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SERIALIZABLE&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;最嚴格的隔離層級，只要交易有不一致的疑慮，交易就必須循序，也就是 B 交易的更新與讀取都需要在 A 交易的更新之後。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可避免 phantom read 以下問題，因為交易資料必須循序，會嚴重影響交易資料庫效能，一般不會採用這種隔離層級。&lt;/p&gt;
&lt;p&gt;InnoDB 在設計上支援全部四種隔離層級，而且 InnoDB 為了避免 phantom read 做了一個東西叫 next-key locking ，所以在 InnoDB 你可以假裝 phantom read 不存在。&lt;/p&gt;
&lt;p&gt;另外 InnoDB 又實做了名叫 multi-versioned concurrency control 的功能，以達到 consistent nonlocking reads 。其實就是 InnoDB 可以同時維護多個版本的資料表資料，所以可以減少 READ COMMITTED 和 REPEATABLE READ 這兩個隔離層級加在資料表上的鎖，讓系統效能更好。&lt;/p&gt;
&lt;table border="1" class="colwidths-given basic docutils"&gt;
&lt;caption&gt;不同交易隔離層級對多個交易並行處理的影響&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;交易隔離層級&lt;/td&gt;
&lt;td&gt;Dirty Read&lt;/td&gt;
&lt;td&gt;Unrepeatable Read&lt;/td&gt;
&lt;td&gt;Phantom Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Read uncommitted&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Read committed&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Repreatable read&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Serializable&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;refer. &lt;a class="reference external" href="https://dev.mysql.com/doc/refman/5.7/en/innodb-transaction-isolation-levels.html"&gt;https://dev.mysql.com/doc/refman/5.7/en/innodb-transaction-isolation-levels.html&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;refer. &lt;a class="reference external" href="https://dev.mysql.com/doc/refman/5.7/en/innodb-next-key-locking.html"&gt;https://dev.mysql.com/doc/refman/5.7/en/innodb-next-key-locking.html&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;refer. &lt;a class="reference external" href="https://openhome.cc/Gossip/HibernateGossip/IsolationLevel.html"&gt;https://openhome.cc/Gossip/HibernateGossip/IsolationLevel.html&lt;/a&gt; (中文)&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mysql-global-transaction-id"&gt;
&lt;h2&gt;MySQL Global Transaction ID&lt;/h2&gt;
&lt;p&gt;Global Transaction ID (GTID) 是 MySQL 5.6 以後新的機制，加強資料庫做 replication 的能力，保證一致性、降低故障率，提高容錯力。&lt;/p&gt;
&lt;p&gt;GTID 是一個全域唯一的編號，在 MySQL 中，GTID 實際上是由 UUID+TID 組成的。&lt;/p&gt;
&lt;p&gt;然而，因為 binlog+pos 的傳統作法也可以正常運作，所以實務上並沒有一定要採用 GTID 的需求，大多設置 GTID_MODE 為 ON_PERMISSIVE。&lt;/p&gt;
&lt;p&gt;在 MySQL 5.7.6 之後支援線上開啟和關閉 GTID&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;線上開啟 GTID&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
SET &amp;#64;&amp;#64;GLOBAL.ENFORCE_GTID_CONSISTENCY = WARN;
# if no error output
SET &amp;#64;&amp;#64;GLOBAL.ENFORCE_GTID_CONSISTENCY = ON;
# GTID_MODE is OFF
SET &amp;#64;&amp;#64;GLOBAL.GTID_MODE = OFF_PERMISSIVE;
SET &amp;#64;&amp;#64;GLOBAL.GTID_MODE = ON_PERMISSIVE;
SHOW STATUS LIKE 'ONGOING_ANONYMOUS_TRANSACTION_COUNT';
# ONGOING_ANONYMOUS_TRANSACTION_COUNT is 0
SET &amp;#64;&amp;#64;GLOBAL.GTID_MODE = ON;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;線上關閉 GIID&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# GTID_MODE is ON
SET &amp;#64;&amp;#64;GLOBAL.GTID_MODE = ON_PERMISSIVE;
SET &amp;#64;&amp;#64;GLOBAL.GTID_MODE = OFF_PERMISSIVE;
SELECT &amp;#64;&amp;#64;GLOBAL.GTID_OWNED;
# wait GTID_OWNED become empty
SET &amp;#64;&amp;#64;GLOBAL.GTID_MODE = OFF;
SET &amp;#64;&amp;#64;GLOBAL.ENFORCE_GTID_CONSISTENCY = OFF;
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;refer. &lt;a class="reference external" href="https://dev.mysql.com/doc/refman/5.7/en/replication-gtids-concepts.html"&gt;https://dev.mysql.com/doc/refman/5.7/en/replication-gtids-concepts.html&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mysql-ssl-version-ssl-cipher"&gt;
&lt;h2&gt;MySQL Ssl-version, Ssl-cipher&lt;/h2&gt;
&lt;p&gt;不同的 client 在不同 OS 環境下連線 MySQL 會用到不同的 tls_version 和 ssl_cipher，因為 TLSv1 現在有安全性考量，MySQL 5.7.10 之後都建議使用 TLSv1.2 進行 ssl 連線。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysql&amp;gt; SHOW VARIABLES LIKE 'tls_version';
+---------------+-----------------------+
| Variable_name | Value                 |
+---------------+-----------------------+
| tls_version   | TLSv1,TLSv1.1,TLSv1.2 |
+---------------+-----------------------+
mysql&amp;gt; SHOW VARIABLES LIKE 'ssl_cipher';
+---------------+---------------------------+
| Variable_name | Value                     |
+---------------+---------------------------+
| ssl_cipher    | DHE-RSA-AES128-GCM-SHA256 |
+---------------+---------------------------+
&lt;/pre&gt;
&lt;p&gt;OpenSSL-linked binaries 預設 ssl_cipher：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Variable_name: ssl_cipher_list
        Value: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE
-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECD
HE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-A
ES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:DHE-RSA-AES128-SHA256:DHE-DSS-AES128-
SHA256:DHE-DSS-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA256:ECD
HE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256
-SHA:DHE-DSS-AES128-SHA:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:
ECDH-ECDSA-AES128-GCM-SHA256:AES256-GCM-SHA384:ECDH-ECDSA-AES256-GCM-SHA384:AES1
28-SHA256:ECDH-ECDSA-AES128-SHA256:AES256-SHA256:ECDH-ECDSA-AES256-SHA384:AES128
-SHA:ECDH-ECDSA-AES128-SHA:AES256-SHA:ECDH-ECDSA-AES256-SHA:DHE-RSA-AES256-GCM-S
HA384:ECDH-RSA-AES128-GCM-SHA256:ECDH-RSA-AES256-GCM-SHA384:ECDH-RSA-AES128-SHA2
56:ECDH-RSA-AES256-SHA384:ECDH-RSA-AES128-SHA:ECDH-RSA-AES256-SHA:DES-CBC3-SHA
&lt;/pre&gt;
&lt;p&gt;refer. &lt;a class="reference external" href="https://dev.mysql.com/doc/refman/5.7/en/encrypted-connection-protocols-ciphers.html"&gt;https://dev.mysql.com/doc/refman/5.7/en/encrypted-connection-protocols-ciphers.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="技術筆記"></category><category term="MySQL"></category></entry><entry><title>2017部落格改版</title><link href="https://hansliu.com/posts/2017/06/2017-blog-theme-upgrade.html" rel="alternate"></link><published>2017-06-30T22:00:00+08:00</published><updated>2017-06-30T22:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2017-06-30:/posts/2017/06/2017-blog-theme-upgrade.html</id><summary type="html">&lt;p class="first last"&gt;&lt;a class="reference external" href="https://lh3.googleusercontent.com/_0F8Y-MPaYipHJG_YBQalIbe59vmhAAbNxTuDjbuphJsD8k-Ndtlze7-fNuD3CELcDwkH9oMd2YG1lRB7XEg2ueFlmlcFHn-Vs2YCY332L3u0DGWkot_Fg1S5ou_wde76kHsOeDmHxEj3KF26eGbb8kcFPtRyfArb0WZKFrp5Wig_55UglBVEO9590QZxeSHEUzugZOMeNz1vmAvBTbwRqNvEBos9CqrAuFv5pnn86diEfx9BFDx72uUeMsMPLkkecRh4mbuk76ndG3MlYrTdd4iF_pEJINI86OzFZfcIu-H015w_kWbwVGwnfzbul4Jj9jfcgoPhcAFuy0yJWUY709jplU3b3D9W3zGdUHYW1kZRvNdz3gR16BguCAZQQL4Tub-Nd9LyaUQWis9SpvYDNeWC6xoCKYs9NFJYgDSPwMH9VfolVTgbIbhA2HHiTmaXoN9dXA5eoQ2IhTtrpNgGBpfqbP7n7tS9OnpS6-nIb7lCZ5d4EQsT03DnIIriCCr6bJupIG_LRMUfCPLigNDWfaVQTaPXRhpxDs-c-3877ZhYT0iFrv-9zndT6qDuHc7YXYWzFuyvOkXXW7M_RC8vxmElnhy0OwzLJ9NhDOiDvooDdDvQuiVzVr9rr5Y_piSqnbwzOrn0vAN0LCGiBBLtJ87tBi-giIYANHswg2MCK8=w665-h255-no"&gt;&lt;img alt="image0" src="https://lh3.googleusercontent.com/_0F8Y-MPaYipHJG_YBQalIbe59vmhAAbNxTuDjbuphJsD8k-Ndtlze7-fNuD3CELcDwkH9oMd2YG1lRB7XEg2ueFlmlcFHn-Vs2YCY332L3u0DGWkot_Fg1S5ou_wde76kHsOeDmHxEj3KF26eGbb8kcFPtRyfArb0WZKFrp5Wig_55UglBVEO9590QZxeSHEUzugZOMeNz1vmAvBTbwRqNvEBos9CqrAuFv5pnn86diEfx9BFDx72uUeMsMPLkkecRh4mbuk76ndG3MlYrTdd4iF_pEJINI86OzFZfcIu-H015w_kWbwVGwnfzbul4Jj9jfcgoPhcAFuy0yJWUY709jplU3b3D9W3zGdUHYW1kZRvNdz3gR16BguCAZQQL4Tub-Nd9LyaUQWis9SpvYDNeWC6xoCKYs9NFJYgDSPwMH9VfolVTgbIbhA2HHiTmaXoN9dXA5eoQ2IhTtrpNgGBpfqbP7n7tS9OnpS6-nIb7lCZ5d4EQsT03DnIIriCCr6bJupIG_LRMUfCPLigNDWfaVQTaPXRhpxDs-c-3877ZhYT0iFrv-9zndT6qDuHc7YXYWzFuyvOkXXW7M_RC8vxmElnhy0OwzLJ9NhDOiDvooDdDvQuiVzVr9rr5Y_piSqnbwzOrn0vAN0LCGiBBLtJ87tBi-giIYANHswg2MCK8=w665-h255-no" /&gt;&lt;/a&gt; 在參加2017的 PyCon 時，一邊聽台上的講者在分享，一邊在滑著自己的部落格，突然發現自己部落格的畫面有點陽春，就萌生替部落格改版的想法，所以在 PyCon 結束後就重新檢視了自己的部落格，研究一些現有的部落格設計，希望能在保留主要元素的前提下，讓部落格在文章和照片的閱讀上可以更加舒適，並且讓網站的結構可以更加簡潔。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://lh3.googleusercontent.com/_0F8Y-MPaYipHJG_YBQalIbe59vmhAAbNxTuDjbuphJsD8k-Ndtlze7-fNuD3CELcDwkH9oMd2YG1lRB7XEg2ueFlmlcFHn-Vs2YCY332L3u0DGWkot_Fg1S5ou_wde76kHsOeDmHxEj3KF26eGbb8kcFPtRyfArb0WZKFrp5Wig_55UglBVEO9590QZxeSHEUzugZOMeNz1vmAvBTbwRqNvEBos9CqrAuFv5pnn86diEfx9BFDx72uUeMsMPLkkecRh4mbuk76ndG3MlYrTdd4iF_pEJINI86OzFZfcIu-H015w_kWbwVGwnfzbul4Jj9jfcgoPhcAFuy0yJWUY709jplU3b3D9W3zGdUHYW1kZRvNdz3gR16BguCAZQQL4Tub-Nd9LyaUQWis9SpvYDNeWC6xoCKYs9NFJYgDSPwMH9VfolVTgbIbhA2HHiTmaXoN9dXA5eoQ2IhTtrpNgGBpfqbP7n7tS9OnpS6-nIb7lCZ5d4EQsT03DnIIriCCr6bJupIG_LRMUfCPLigNDWfaVQTaPXRhpxDs-c-3877ZhYT0iFrv-9zndT6qDuHc7YXYWzFuyvOkXXW7M_RC8vxmElnhy0OwzLJ9NhDOiDvooDdDvQuiVzVr9rr5Y_piSqnbwzOrn0vAN0LCGiBBLtJ87tBi-giIYANHswg2MCK8=w665-h255-no"&gt;&lt;img alt="image0" src="https://lh3.googleusercontent.com/_0F8Y-MPaYipHJG_YBQalIbe59vmhAAbNxTuDjbuphJsD8k-Ndtlze7-fNuD3CELcDwkH9oMd2YG1lRB7XEg2ueFlmlcFHn-Vs2YCY332L3u0DGWkot_Fg1S5ou_wde76kHsOeDmHxEj3KF26eGbb8kcFPtRyfArb0WZKFrp5Wig_55UglBVEO9590QZxeSHEUzugZOMeNz1vmAvBTbwRqNvEBos9CqrAuFv5pnn86diEfx9BFDx72uUeMsMPLkkecRh4mbuk76ndG3MlYrTdd4iF_pEJINI86OzFZfcIu-H015w_kWbwVGwnfzbul4Jj9jfcgoPhcAFuy0yJWUY709jplU3b3D9W3zGdUHYW1kZRvNdz3gR16BguCAZQQL4Tub-Nd9LyaUQWis9SpvYDNeWC6xoCKYs9NFJYgDSPwMH9VfolVTgbIbhA2HHiTmaXoN9dXA5eoQ2IhTtrpNgGBpfqbP7n7tS9OnpS6-nIb7lCZ5d4EQsT03DnIIriCCr6bJupIG_LRMUfCPLigNDWfaVQTaPXRhpxDs-c-3877ZhYT0iFrv-9zndT6qDuHc7YXYWzFuyvOkXXW7M_RC8vxmElnhy0OwzLJ9NhDOiDvooDdDvQuiVzVr9rr5Y_piSqnbwzOrn0vAN0LCGiBBLtJ87tBi-giIYANHswg2MCK8=w665-h255-no" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在參加2017的 PyCon 時，一邊聽台上的講者在分享，一邊在滑著自己的部落格，突然發現自己部落格的畫面有點陽春，就萌生替部落格改版的想法，所以在 PyCon 結束後就重新檢視了自己的部落格，研究一些現有的部落格設計，希望能在保留主要元素的前提下，讓部落格在文章和照片的閱讀上可以更加舒適，並且讓網站的結構可以更加簡潔。&lt;/p&gt;
&lt;p&gt;這次改版前前後後花的時間有兩週多，比原本預想的時間還要多了一點，因為久久才改一次，一堆設計都忘光光，不過從成果來看自己還蠻滿意的，希望能帶來更好的瀏覽體驗。&lt;/p&gt;
&lt;p&gt;主要的更新如下：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;更完善的 css3 設計，同時移除對 bootstrap 的依賴&lt;/li&gt;
&lt;li&gt;修正 categories 和 tags 網頁打不開的問題&lt;/li&gt;
&lt;li&gt;調整 header 和 sidebar 的結構，強化 RWD 的支援&lt;/li&gt;
&lt;li&gt;加入新版的 sharethis 功能&lt;/li&gt;
&lt;li&gt;python 升級到 3.5，同時 pelican 升級到 3.7.1&lt;/li&gt;
&lt;li&gt;加入 pipeline pelican publish 的功能，這樣更新文章可以做到自動部屬&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最後替新舊網站的設計留個截圖，為這次改版做個記錄。&lt;/p&gt;
&lt;p&gt;# 舊網站設計的截圖&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://lh3.googleusercontent.com/5nXJbUnIEYkbVVHXBFT2zzaEl3aeoyTukYy2T8LO9J9VuFIDYicdEnaRRpQc1ivQn0851clqeBN-w6jLSLzmrjoYBtUYihv5RNhlCB5ppSU74tHtfTproDlKHb6GTopLi8gRkSJW5yUdglikQh9Bx4uX8_6AVHAVet74-8pq2WnT9EUbYfFI1JH5vD8xl_l89sav5pZU-5vmpBRnADwpz5zvwN4iB6w0X0BlJ5lWGOTZHbNjqqgWB3HkUdLkebpQo1PXajAL4wpw9wvLQ6TfmyFEHdV23iQEkGQP7OPCJr5MPwn5UgBG79g88zZcLIXnDu0JMLI691etPCz7JqT2X8zvFIFul-uLZbfn59xOf8rqnFCHLELZHRLcbO8DlM95da9egcDzMYdZgAQA8jXuQbpmQYEdaGyypiV4mam6Rhjm5S_HMgMzMLNrwgUoYEail7u4Kly999rRIqms78aASGzKQQmXgr5NeZ9-2KJkp1OCg7PHIaGGn5U9yq725xNvMyHEiLRzSWj0gkgvH3pWEhT4BwYUdfJ0YyK2ccPveXAdFSMDzD6czw5WVY_hB640pl65U8ClrZu3TICpP3oJZzmi6mcML0YUAg1v0hRiX3ftZXFR7OujDG0XHLMHCnOxwYCkjcfpclF8q-7KLg-oBUU8BjaOSx0bhePXDq9b6zM=w1200-h708-no"&gt;&lt;img alt="image1" src="https://lh3.googleusercontent.com/5nXJbUnIEYkbVVHXBFT2zzaEl3aeoyTukYy2T8LO9J9VuFIDYicdEnaRRpQc1ivQn0851clqeBN-w6jLSLzmrjoYBtUYihv5RNhlCB5ppSU74tHtfTproDlKHb6GTopLi8gRkSJW5yUdglikQh9Bx4uX8_6AVHAVet74-8pq2WnT9EUbYfFI1JH5vD8xl_l89sav5pZU-5vmpBRnADwpz5zvwN4iB6w0X0BlJ5lWGOTZHbNjqqgWB3HkUdLkebpQo1PXajAL4wpw9wvLQ6TfmyFEHdV23iQEkGQP7OPCJr5MPwn5UgBG79g88zZcLIXnDu0JMLI691etPCz7JqT2X8zvFIFul-uLZbfn59xOf8rqnFCHLELZHRLcbO8DlM95da9egcDzMYdZgAQA8jXuQbpmQYEdaGyypiV4mam6Rhjm5S_HMgMzMLNrwgUoYEail7u4Kly999rRIqms78aASGzKQQmXgr5NeZ9-2KJkp1OCg7PHIaGGn5U9yq725xNvMyHEiLRzSWj0gkgvH3pWEhT4BwYUdfJ0YyK2ccPveXAdFSMDzD6czw5WVY_hB640pl65U8ClrZu3TICpP3oJZzmi6mcML0YUAg1v0hRiX3ftZXFR7OujDG0XHLMHCnOxwYCkjcfpclF8q-7KLg-oBUU8BjaOSx0bhePXDq9b6zM=w1200-h708-no" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;# 新網站設計的截圖&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://lh3.googleusercontent.com/cAhvW7g7L_nwURLDH4JlClgNSlp4B8K8JBZXVAx5d_OJTumm2YwE-ugr8zmKLAvkDqZ6TWvAn5rFIGEyA7n2KQWYJH4Ci0OmYMlWjFBWmAeY7Z5u5dHPPqwaUfBHiMq02G-PPjThrbPmaX_0SXlo-lZlBFX99oWd2xiq-7WK6AF0-SLDghXLR_bJOb5C1SjLqJ9HTA2A3unIY9MsIyWS_XewdTAEC4zwpohyCc7prNLZqYDyO468pgrTIlruuQHbUiYmMvTT2i_HAZAN47lkbKBT-DPkPos7aMqJK3NG2BIFqm_vPXOpK6QNXKwbd7n3DJWaLqgtlUKA2Ow_sUuwzqyHf_iya6BTLQUUYlsne7RGdQ22O1udpEnF05H6xzon_aQFGo2PCVjO7kG7jNU_H8UieRge8BR8kEVr4fW2btV6pV9WHehfnn0R5EQ8h-NAqSy_8j1zlnSiDkI7s_sWwwMgfZ7zXvPlHgMlumEjiA3eZGf1Ycavd3G5pavP7xSc2NyYsxoKGH_jqsZYeEo1pX4vyeZ4PFHPwDOgV35qpK6_UuQOCXmHIXrDIqrkZQvlTTrr4MoFkUu9nssSm_cWD6Vz2Wemu5b_0e-TeXR4KbsovdhokEV2NQ6vms8vUpRtRJKVLVYv9394cC-w_xTVhnUNnWy51U2Zd40u9BJ7Tso=w1200-h663-no"&gt;&lt;img alt="image2" src="https://lh3.googleusercontent.com/cAhvW7g7L_nwURLDH4JlClgNSlp4B8K8JBZXVAx5d_OJTumm2YwE-ugr8zmKLAvkDqZ6TWvAn5rFIGEyA7n2KQWYJH4Ci0OmYMlWjFBWmAeY7Z5u5dHPPqwaUfBHiMq02G-PPjThrbPmaX_0SXlo-lZlBFX99oWd2xiq-7WK6AF0-SLDghXLR_bJOb5C1SjLqJ9HTA2A3unIY9MsIyWS_XewdTAEC4zwpohyCc7prNLZqYDyO468pgrTIlruuQHbUiYmMvTT2i_HAZAN47lkbKBT-DPkPos7aMqJK3NG2BIFqm_vPXOpK6QNXKwbd7n3DJWaLqgtlUKA2Ow_sUuwzqyHf_iya6BTLQUUYlsne7RGdQ22O1udpEnF05H6xzon_aQFGo2PCVjO7kG7jNU_H8UieRge8BR8kEVr4fW2btV6pV9WHehfnn0R5EQ8h-NAqSy_8j1zlnSiDkI7s_sWwwMgfZ7zXvPlHgMlumEjiA3eZGf1Ycavd3G5pavP7xSc2NyYsxoKGH_jqsZYeEo1pX4vyeZ4PFHPwDOgV35qpK6_UuQOCXmHIXrDIqrkZQvlTTrr4MoFkUu9nssSm_cWD6Vz2Wemu5b_0e-TeXR4KbsovdhokEV2NQ6vms8vUpRtRJKVLVYv9394cC-w_xTVhnUNnWy51U2Zd40u9BJ7Tso=w1200-h663-no" /&gt;&lt;/a&gt;&lt;/p&gt;
</content><category term="技術筆記"></category><category term="Blog"></category></entry><entry><title>Taiwan eTraining Course Finder in Heroku</title><link href="https://hansliu.com/posts/2015/07/github-etraining-course-finder-heroku.html" rel="alternate"></link><published>2015-07-07T23:00:00+08:00</published><updated>2015-07-07T23:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2015-07-07:/posts/2015/07/github-etraining-course-finder-heroku.html</id><summary type="html">&lt;p&gt;因為勞動部勞動力發展署網站實在太難用，所以自己開發一個好用的網站，然後部屬到 Heroku 上面。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://hansliu-finder.herokuapp.com"&gt;Taiwan eTraining Course Finder 網站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;實作上採用的是 Python3 搭配 Flask 架構。&lt;/p&gt;
&lt;p&gt;在課程資料來源的部份 ...&lt;/p&gt;</summary><content type="html">&lt;p&gt;因為勞動部勞動力發展署網站實在太難用，所以自己開發一個好用的網站，然後部屬到 Heroku 上面。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://hansliu-finder.herokuapp.com"&gt;Taiwan eTraining Course Finder 網站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;實作上採用的是 Python3 搭配 Flask 架構。&lt;/p&gt;
&lt;p&gt;在課程資料來源的部份，使用 Selenium 收集勞動部勞動力發展署網站公開的課程資料（目前收集的課程範圍只有臺北市和新北市），然後將課程資料建置索引之後儲存於 Sqlite3 的資料庫中，最後設定 cronjob 定期更新資料庫。&lt;/p&gt;
&lt;p&gt;目前的功能：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;直覺式的課程尋找. (暫時限定: 臺北市, 新北市)&lt;/li&gt;
&lt;li&gt;顯示課程資訊、課程的報名時間與開訓時間。&lt;/li&gt;
&lt;li&gt;顯示課程代碼，可以連結到相關課程的詳細介紹頁面。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;建置課程資料庫&lt;/h2&gt;
&lt;p&gt;只要直接執行 model.py 就會完成收集課程資料和建立資料庫等動作。&lt;/p&gt;
&lt;p&gt;簡單的 use case:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# build up db
cd etraining-course-finder-heroku/
python3.* ./etraining_course_finder/model.py

# update db to github
git pull ; git add -u ; git commit -m'updated db' ; git push
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="heroku"&gt;
&lt;h2&gt;部屬到 Heroku&lt;/h2&gt;
&lt;p&gt;很久以前就摸索過 Heroku 這個 PaaS 網站，當時就覺得 Heroku 很簡單好用，不論在安裝和部屬上都算是相當容易，有 github 的專案都可以直接 deployment，不過當你有使用到 Heroku 內建 plugin 的時候，就必須先透過信用卡卡號認證，即使你只是要用免費的 plugin，這算是稍嫌麻煩一點的地方。&lt;/p&gt;
&lt;p&gt;同時，因為 Heroku 無法安裝 browser，就無法直接執行 Selenium，所以目前定期更新資料庫的 cronjob 是跑在本機端上面。&lt;/p&gt;
&lt;p&gt;詳細使用教學可以參照 Github repository 的說明。&lt;/p&gt;
&lt;p&gt;Github repository link: &lt;a class="reference external" href="https://github.com/hansliu/etraining-course-finder-heroku"&gt;https://github.com/hansliu/etraining-course-finder-heroku&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="技術筆記"></category><category term="Python"></category><category term="Github"></category><category term="Heroku"></category></entry><entry><title>2015 PyCon</title><link href="https://hansliu.com/posts/2015/06/2015-pycon.html" rel="alternate"></link><published>2015-06-08T23:00:00+08:00</published><updated>2015-06-08T23:00:00+08:00</updated><author><name>Hans Liu</name></author><id>tag:hansliu.com,2015-06-08:/posts/2015/06/2015-pycon.html</id><summary type="html">&lt;p class="first last"&gt;&lt;a class="reference external" href="https://lh3.googleusercontent.com/-PWwg2yshhX4/VXb248gk16I/AAAAAAAAOmQ/C6HT4hX1o4w/s1600/IMG_0183.JPG"&gt;&lt;img alt="image0" src="https://lh3.googleusercontent.com/-PWwg2yshhX4/VXb248gk16I/AAAAAAAAOmQ/C6HT4hX1o4w/s800/IMG_0183.JPG" /&gt;&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;div class="img-center"&gt;&lt;p&gt;&lt;a class="reference external" href="https://lh3.googleusercontent.com/-PWwg2yshhX4/VXb248gk16I/AAAAAAAAOmQ/C6HT4hX1o4w/s1600/IMG_0183.JPG"&gt;&lt;img alt="image0" src="https://lh3.googleusercontent.com/-PWwg2yshhX4/VXb248gk16I/AAAAAAAAOmQ/C6HT4hX1o4w/s800/IMG_0183.JPG" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;今年 PyCon APAC 是在台灣舉辦，活動的規模也擴增到了三天，感謝 Rick 的協助，讓我順利用早鳥票報名 PyCon APAC 啦！&lt;/p&gt;
&lt;p&gt;這次聽到有趣的 library 和 framework 比較少，大多在於如何利用 Python 去實踐一些想法，或是利用在不同領域的研究，其中有不少贊助廠商的分享也還不錯。&lt;/p&gt;
&lt;p&gt;三天的演講內容摘要可以參考 hackpad 的共筆。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://hackpad.com/PyCon-APAC-2015-Day-1-June-5-Tt8wwkILDX0"&gt;https://hackpad.com/PyCon-APAC-2015-Day-1-June-5-Tt8wwkILDX0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最後還是要記錄一下今年活動覺得有趣或有用的 library。&lt;/p&gt;
&lt;div class="section" id="hackpad"&gt;
&lt;h2&gt;hackpad&lt;/h2&gt;
&lt;p&gt;目前當紅的共筆服務，不論在操作和反應上都比 google doc 來的更加即時好用，相當推薦。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="readthedocs"&gt;
&lt;h2&gt;readthedocs&lt;/h2&gt;
&lt;p&gt;也是目前當紅的文件托管服務，已經有相當多的 open source 將它們的文件轉移到 readthedocs。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://readthedocs.org/"&gt;https://readthedocs.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="urllib2-pycurl-selenium"&gt;
&lt;h2&gt;urllib2 &amp;amp; pycurl &amp;amp; selenium&lt;/h2&gt;
&lt;p&gt;分析網頁的三套工具，分別是 python 內建的 urllib2 library，或是模擬 linux curl 功能的 pycurl library，以及用來模擬瀏覽器動作的 selenium library，透過這三套工具來分析網頁，應該能解決絕大多數的問題。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gevent"&gt;
&lt;h2&gt;gevent&lt;/h2&gt;
&lt;p&gt;隨著時代的進步，撰寫同步與非同步服務的建議不再是使用 twisted，而多半建議採用的是 gevent，這是更加輕量好用的網路協作 library，而且在程式設計上提供更容易理解的架構與方法。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.gevent.org/"&gt;http://www.gevent.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://xlambda.com/gevent-tutorial/"&gt;http://xlambda.com/gevent-tutorial/&lt;/a&gt; 中譯&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="celery-luigi"&gt;
&lt;h2&gt;celery &amp;amp; luigi&lt;/h2&gt;
&lt;p&gt;這兩套 library 都是用來做 task manager 的，可惜的是不論是聽講者講的內容，或是我自己當下看了文件，都還是不太能理解這些套件的用途，只好先記錄下來，待以後有機會用到再仔細學習。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.celeryproject.org/"&gt;http://www.celeryproject.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://luigi.readthedocs.org/"&gt;http://luigi.readthedocs.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="pytest"&gt;
&lt;h2&gt;pytest&lt;/h2&gt;
&lt;p&gt;除了 python 內建的 unittest 之外，強大的 pytest 不但可以減少測試程式的複雜度，還可以強化測試結果的輸出。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pytest.org/"&gt;http://pytest.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ansible"&gt;
&lt;h2&gt;ansible&lt;/h2&gt;
&lt;p&gt;簡單說就是一套以 python 撰寫的 deployment 工具，最大特色是採用 ssh 做溝通，所以不用安裝 client tool， ansible 也是採用 roles/playbook/config 的架構做管理。&lt;/p&gt;
&lt;p&gt;因為我沒親身使用過，所以無法評論與最多人用的 Puppet 或是 Chef 和 Salt 之間的優劣與差異，但是據我所知，每一套 deployment 工具都有它設計上的特色，建議是根據實際需求來做挑選。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ansible.com/"&gt;http://www.ansible.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="type-hints"&gt;
&lt;h2&gt;type hints&lt;/h2&gt;
&lt;p&gt;Python 在變數宣告上採用的是 dynamic typing，也就是在宣告變數的時候並不需要指定其型態，而是當程式執行它的時候，才會去檢查其變數的形態與邏輯。&lt;/p&gt;
&lt;p&gt;不過，雖然 Python 採用 dynamic typing，它同時也是強型別的，所以 Python 仍然禁止任何沒有明確定義的操作，比如數字加字串。而 dynamic typing 雖然替程式開發者帶來了更大的彈性，但缺點就是產生較差的效能，因為所有的檢查都會在執行的時候才做處理。&lt;/p&gt;
&lt;p&gt;此次 keynote 透過分享 PEP 0484 Type Hints 這個章節，讓程式開發者可以透過 typing 這個 module 來預先替變數指定型態，增加 Python 在執行上的效能。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0484/"&gt;https://www.python.org/dev/peps/pep-0484/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="技術筆記"></category><category term="Python"></category></entry></feed>