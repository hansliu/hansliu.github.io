<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Hans Blog</title><link href="http://www.hansliu.com/" rel="alternate"></link><link href="http://www.hansliu.com/feeds/xie-cheng-shi.atom.xml" rel="self"></link><id>http://www.hansliu.com/</id><updated>2014-06-02T23:00:00+08:00</updated><entry><title>2014 PyCon</title><link href="http://www.hansliu.com/posts/2014/06/2014-pycon.html" rel="alternate"></link><updated>2014-06-02T23:00:00+08:00</updated><author><name>996 / Hans</name></author><id>tag:www.hansliu.com,2014-06-02:posts/2014/06/2014-pycon.html</id><summary type="html">&lt;div class="img-center"&gt;&lt;p&gt;&lt;a class="reference external" href="https://lh5.googleusercontent.com/-LR8HJ1SVLUU/U4yvHeLDgsI/AAAAAAAAKUA/h-7gWlvf7Z0/s1600/pycon2014.jpg"&gt;&lt;img alt="image0" src="https://lh5.googleusercontent.com/-LR8HJ1SVLUU/U4yvHeLDgsI/AAAAAAAAKUA/h-7gWlvf7Z0/s800/pycon2014.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;今年當然也參加 PyCon 啦！&lt;/p&gt;
&lt;p&gt;趁記憶猶新的時候，把這次聽到有趣的 library 和 framework 記錄下來。前面三項的內容摘錄自 &lt;a class="reference external" href="http://www.codedata.com.tw/social-coding/python-conference-newbie-ccr/"&gt;codedata&lt;/a&gt; 。&lt;/p&gt;
&lt;div class="section" id="fabric"&gt;
&lt;h2&gt;fabric&lt;/h2&gt;
&lt;p&gt;當你一次管很多台電腦的時候，常常想要一鍵讓你所有機器執行數個 command。例如想要一次看所有機器的時間是否同步，看看所有電腦上的剩餘空間，或是一鍵 deploy，一鍵 rsync 等等...這個工具讓你輕鬆寫些 python script 就可以達到此目的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.fabfile.org/"&gt;http://www.fabfile.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="docker"&gt;
&lt;h2&gt;docker&lt;/h2&gt;
&lt;p&gt;這個應該不是 Python 限定的，但是因為有場專門介紹覺得很有興趣。現在大家已經對 VM 很熟悉了，但是 Docker 算是 lightweight 的 VM，他們有 host/guest 兩層 OS，而是在 host 之上有個 docker 層，可以 load 各種 distribution 到你的機器之上。所以你很容易開一個乾淨的環境，並且把你想要的檔案透過 API 放進此 sandbox，透過 expose 你想要的 port，這樣就可以跑起一個乾淨的環境。這對於測試，或是 staging 都非常有幫助。另外他有版本控制的功能，也有各種 distribution 的 ecosystem，成熟了以後應該會是個趨勢。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.docker.io/"&gt;https://www.docker.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="thumbor"&gt;
&lt;h2&gt;thumbor&lt;/h2&gt;
&lt;p&gt;其實這是個小但是很可能會用到的工具。我們網頁常常需要切圖，但是不知道要切多大。而 thumbor 是個 gateway，只要描述:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
http://&amp;lt;thumbor-server&amp;gt;/300×200/smart/{your-host-of-image}/{your-path-to-image}
&lt;/pre&gt;
&lt;p&gt;它就會動態的產生 thumbnail，此工具搭配 CDN 可以解決很多的問題。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/thumbor/thumbor"&gt;https://github.com/thumbor/thumbor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="jieba"&gt;
&lt;h2&gt;jieba&lt;/h2&gt;
&lt;p&gt;中文分詞一直是讓人頭痛的問題，自從雅虎斷章取義工具 sunset 之後，現在主流的分詞工具之一是中研院的中文斷詞系統，但是我自己覺得沒有很好用。現在則有了新的選擇，就是結巴分詞。結巴的目標是打造最好用的 Python 分詞工具，對於需要中文分詞的 Python 使用者來說無疑是一大福音。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/fxsjy/jieba"&gt;https://github.com/fxsjy/jieba&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="mezzanine"&gt;
&lt;h2&gt;mezzanine&lt;/h2&gt;
&lt;p&gt;基於 Django 之上完成的強大的內容管理工具，keynote speaker 有用 wordpress 當做比較的對象，架設內容網站的選擇之一。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/stephenmcd/mezzanine"&gt;https://github.com/stephenmcd/mezzanine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="networkx"&gt;
&lt;h2&gt;networkx&lt;/h2&gt;
&lt;p&gt;一個描繪點與線結構用的繪圖工具，如果有需要把複雜的網路架構圖像化的可以參考。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://networkx.github.io/"&gt;https://networkx.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="Python"></category></entry><entry><title>使用 Name expansion + Fabric 同時部屬多台機器</title><link href="http://www.hansliu.com/posts/2014/04/github-name-expansion.html" rel="alternate"></link><updated>2014-04-26T23:00:00+08:00</updated><author><name>996 / Hans</name></author><id>tag:www.hansliu.com,2014-04-26:posts/2014/04/github-name-expansion.html</id><summary type="html">&lt;p&gt;前陣子為了完成 Fabric 同時部屬多台機器的功能，寫了一個字串展開的小工具。&lt;/p&gt;
&lt;p&gt;使用 python regular expression 來實作，讓使用者可以利用逗號、數字、括弧將字串批次展開。&lt;/p&gt;
&lt;p&gt;簡單的 use case:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; from name_expansion import NameExpansionCore
&amp;gt;&amp;gt;&amp;gt; ne = NameExpansionCore()

&amp;gt;&amp;gt;&amp;gt; host = '[tw,hk][1-2].host[3,5].com'
&amp;gt;&amp;gt;&amp;gt; host_list = list([host])
&amp;gt;&amp;gt;&amp;gt; for match in ne.parse(host):
...   host_list = ne.expand(match, host_list)
&amp;gt;&amp;gt;&amp;gt; host_list
['tw1.host3.com', 'hk1.host3.com', 'tw1.host5.com', 'hk1.host5.com',
'tw2.host3.com', 'hk2.host3.com', 'tw2.host5.com', 'hk2.host5.com']
&lt;/pre&gt;
&lt;p&gt;Fabric 要部屬的機器是儲存在 env.hosts 裡面，型態是 list，所以我們只要在 fabfile.py 加入一個 method，將 Name expansion 批次展開的結果回存到 env.hosts 裡。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def h(curr_host):
  ne = NameExpansionCore()
  host_list = list([curr_host])
  for match in ne.parse(curr_host):
    host_list = ne.expand(match, host_list)
  env.hosts = host_list
&lt;/pre&gt;
&lt;p&gt;接著我們就可以透過 Fabric 內建指令 fab，同時指定多台機器做部屬的動作，不過執行部屬的動作是循序的，並不是平行的。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
fab h:host[1-3].com deploy
&lt;/pre&gt;
&lt;p&gt;詳細使用教學可以參照 Github repository 的說明。&lt;/p&gt;
&lt;p&gt;Github repository link: &lt;a class="reference external" href="https://github.com/hansliu/NameExpansion"&gt;https://github.com/hansliu/NameExpansion&lt;/a&gt;&lt;/p&gt;
</summary><category term="Python"></category><category term="Github"></category></entry></feed>